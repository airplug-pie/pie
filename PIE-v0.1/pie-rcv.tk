#    pie
#    a twitter-like app for airplug
#    authors: Christophe Boudet, Julien Castaigne, Jonathan Roudière,
#             Christophe Roquette, Jérémy Subtil
#    license type: free of charge license for academic and research purpose
#    see license.txt

### MODULE RECEPTION ##########################################################


### VARIABLES DU MODULE #######################################################

###############################################################################



### PROCEDURE DU MODULE #######################################################

###############################################################################


##########################################################################
# Nom		 : APG_receive_what
# Role		 : Surcharge de la procedure de libapgtk afin de traiter le message recu
# Parametres : Le message
# Retourne	 : Rien
##########################################################################
proc APG_receive_what { what } {
	
	set ::PIE_rcv_msg $what
	puts "recu : $::PIE_rcv_msg"


	#decoupage du message
	set msg_from [APG_msg_splitstr ::PIE_rcv_msg FROM]
	set msg_nick [APG_msg_splitstr ::PIE_rcv_msg NICK]
	set msg_ttl [APG_msg_splitstr ::PIE_rcv_msg TTL]
	set msg_tts [APG_msg_splitstr ::PIE_rcv_msg TTS]
	set msg_type [APG_msg_splitstr ::PIE_rcv_msg TYPE]
	
	
	#######type hearbeat#######
	if {$msg_type == "0"} {
   		puts "heart"
   		set msg_offre [APG_msg_splitstr ::PIE_rcv_msg OFF]
   		set msg_forward [APG_msg_splitstr ::PIE_rcv_msg FWD]
   		
		#gestion des offres
		PIE_proc_offers $msg_offre
		
		#gestion des forwards
		PIE_proc_forwards $msg_forward
	
	}
	
	
	#######type message#######
	if {$msg_type == "1"} {
		puts "msg"
		set msg_id [APG_msg_splitstr ::PIE_rcv_msg ID]
		set msg_date [APG_msg_splitstr ::PIE_rcv_msg DATE]
		set msg_content [APG_msg_splitstr ::PIE_rcv_msg MSG]
		
		#test si on est abonné
		if {[storage.issubscribed $msg_from $msg_nick]} {
			puts "issubscribed"			
			
			#affichage du msg
			#gui_stream_recvmesg { [storage.new_stream $msg_from $msg_nick] $msg_content }
			#TODO couple a storage et la gui
			
			if {$msg_tts > 1} {
				set msg_tts [expr $msg_tts - 1]
			} else {
				set msg_ttl [expr $msg_ttl - 1]
			}	
			
		} else {
			#test si on a des voisins intéressé
			if {[storage.isforwarded $msg_from $msg_nick]} {
				puts "is forwarded"
				set msg_tts [expr $msg_tts - 1]
			} else {
				set msg_ttl [expr $msg_ttl - 1]
			}
		}
		
		
		
		#on relay le msg
		if {$msg_tts > 1} {
			set msg [ PIE_gen_header $msg_ttl $msg_tts $msg_type ]
	
  			APG_msg_addmsg msg $::PIE_msg_key_post_id $msg_id
  			APG_msg_addmsg msg $::PIE_msg_key_post_date $msg_date
  			APG_msg_addmsg msg $::PIE_msg_key_post_content $msg_content
  
  			PIE_send_what $msg
  			PIE_log_send_pie $msg	
		}
	}

	

}