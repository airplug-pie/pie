#! /bin/sh
# test for the --notk option \
if test `echo $@ | grep -c "\-\-notk"` = '0' ; 
# use wish... \
then exec wish "$0" "$@" 
# ... use tclsh. \
else exec tclsh "$0" "$@"
# That is all. \
fi

#    pie
#    an airplug compatible program
#    author: Bertrand Ducourthial AT utc.fr
#    license type: free of charge license for academic and research purpose
#    see license.txt

### INITIALISATION STANDARD DE L'APPLICATION COMPATIBLE AIRPLUG ###############
# nom standard de l'application (nom du rep. dans la distribution)
# trois lettres majuscules pour APP, trois lettres minuscules pour app
set APP "PIE"
set app "pie"

# pour deboguage de la bibliotheque uniquement :
# - decommenter les deux lignes ci-dessous
# - commenter les lignes if catch ci-apres
# set APG_PATH [lindex [../../LIBAPGTK/LIBAPGTK/libapg.tksplit [exec env | grep APG_PATH] "="] 1]
# source $APG_PATH/LIBAPGTK/LIBAPGTK/libapg.tk
# recuperation de la valeur de la variable d'environnement APG_PATH,
# qui indique le repertoire de la distribution AIRPLUG
set APG_PATH [lindex [split [exec env | grep APG_PATH] "="] 1]
if { [ catch {
		set libapgfile [open $APG_PATH/LIBAPGTK/LIBAPGTK/libapg.tk r]
		close $libapgfile

 } ] } {
	puts stderr "\n\tlibapg.tk n'est pas accessible\n\
        \t- verifier la variable d'environnement APG_PATH \n\
          faire \"export APG_PATH=chemin_vers_la distribution_airplug\" (shell bash) \n\
          ou source config.sh (si ce fichier est present dans .../bin)\n"
	exit
 } else {
	source $APG_PATH/LIBAPGTK/LIBAPGTK/libapg.tk
	APG_vrb_dispnotif "utilisation de la distribution airplug \n $APG_PATH"
 }
###############################################################################
	      
### SURCHARGE DE VARIABLES ####################################################
set APP_apropos \
"PIE v0.1"

set APP_help \
"

Exemple de lancement : ./pie.tk --emu | ./pie.tk --emu

Avec l'interface, si une application destination est précisée
(eg. app=PIE), alors APG_send_whatwho est appelée pour envoyer
le message à l'application. Sinon (app=-), APG_send_what est appelée.

Le mode par défaut est défini par les options --what ou --whatwho.
Dans le premier mode, il faut utiliser APG_send_what data.
Dans le second mode, il faut utiliser APG_send_whatwho data app.
S'il n'y a pas concordance entre le mode déclaré et l'appel utilisé
(ou le message reçu) alors il y a tentative de récupération.
L'option --safemode arrête l'application en cas de non concordance
au lieu de tenter d'interpréter les arguments non conformes.

L'option --auto (ou --auto=5000) permet de faire partir l'application
automatiquement après 2 sec (ou 5 sec).

L'option --ident (ou --ident=toto) permet de définir un id par défaut
(ou toto), disponible dans la variable APG_ident.
"
###############################################################################

### LECTURE FICHIERS APPLICATIONS + AFFICHAGE ZONES ###########################
## Lecture des fichiers composant l'application
source $PATH/pie-snd.tk
source $PATH/pie-rcv.tk
source $PATH/pie-svg.tk

if { $APG_notk == true } {
	APG_vrb_dispwarning "option notk => pas de creation de l'interface de pie" "pie.tk"
} else {

## Ajout des zones crees, avec option affichage
APG_int_addzone snd "Emissions" 1
APG_int_addzone rcv "Receptions" 1

## Affichage des zones
APG_int_displayzones
###############################################################################



### SURCHARGE DE FONCTIONS ####################################################
## Surcharge de la fonction associee au bouton depart
proc APG_int_btstart { } {
	APG_int_disablebtstart
	.snd.bt configure -state active
}

## Surcharge de la fonction associee au bouton end
proc APG_int_btend { } {
	# arret eventuelle sauvegarde en cours
	APG_svg_stop

	exit
}

}
# fin du else du if notk
###############################################################################


